name: Deploy AWS CDK

on:
  workflow_dispatch:

env:
  RUSTFLAGS: --cfg=web_sys_unstable_apis

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Download Website Binary
        uses: actions/download-artifact@v4
        with:
          name: website_binary
          path: nexus/target/site/pkg/

      - name: Download Server Binary
        uses: actions/download-artifact@v4
        with:
          name: server_binary
          path: nexus/target/lambda/server/bootstrap.zip

      - name: Checkout CDK repository
        uses: actions/checkout@v4
        with:
          path: cdk

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set Stage Environment Variable
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
            echo "STAGE=dev" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
            echo "STAGE=staging" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/release' ]]; then
            echo "STAGE=prod" >> $GITHUB_ENV
          fi

      - name: Set Stripe Keys
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/dev' || ${{ github.ref }} == 'refs/heads/staging' ]]; then
            echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY_TEST }}" >> $GITHUB_ENV
            echo "STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY_TEST }}" >> $GITHUB_ENV
            echo "STRIPE_WEBHOOK_SECRET"=${{ secrets.STRIPE_WEBHOOK_SECRET_TEST}}" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/release' ]]; then
            echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY_PROD }}" >> $GITHUB_ENV
            echo "STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY_PROD }}" >> $GITHUB_ENV
            echo "STRIPE_WEBHOOK_SECRET"=${{ secrets.STRIPE_WEBHOOK_SECRET_PROD}}" >> $GITHUB_ENV
          fi

      - name: Install OpenSSL Development Packages
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Set OpenSSL Environment Variables for Build
        run: |
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          echo "OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE=/usr/include/openssl" >> $GITHUB_ENV

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install NPM Packages
        run: npm install
        working-directory: cdk

      - name: Install AWS CDK
        run: "sudo npm install -g aws-cdk"

      - name: CDK Synth
        run: cdk synth
        working-directory: cdk

      - name: CDK Deploy
        run: cdk deploy --require-approval never --context stage=${{ env.STAGE }} --all
        working-directory: cdk

      - name: Upload assets to S3
        run: aws s3 sync ./nexus/target/site/pkg s3://nexus-static-asset-bucket-${{ env.STAGE}}/pkg --delete

name: Deploy AWS CDK

on:
  push:
    branches: [dev, staging, release]
  workflow_dispatch:

env: 
    RUSTFLAGS: --cfg=web_sys_unstable_apis

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CDK repository
        uses: actions/checkout@v4
        with:
          path: cdk 

      - name: Checkout Leptos Website Repository
        uses: actions/checkout@v4
        with:
          repository: Andrewp2/nexus
          path: nexus

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set Stage Environment Variable
        run: |
            if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
              echo "STAGE=dev" >> $GITHUB_ENV
            elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
              echo "STAGE=staging" >> $GITHUB_ENV
            elif [[ ${{ github.ref }} == 'refs/heads/release' ]]; then
              echo "STAGE=prod" >> $GITHUB_ENV
            fi

      - name: Set Stripe Keys
        run: |
            if [[ ${{ github.ref }} == 'refs/heads/dev' || ${{ github.ref }} == 'refs/heads/staging' ]]; then
              echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY_TEST }}" >> $GITHUB_ENV
              echo "STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY_TEST }}" >> $GITHUB_ENV
            elif [[ ${{ github.ref }} == 'refs/heads/release' ]]; then
              echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY_PROD }}" >> $GITHUB_ENV
              echo "STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY_PROD }}" >> $GITHUB_ENV
            fi

      - name: Install OpenSSL Development Packages
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config
          
      #- name: Set OpenSSL Environment Variables for Build
      #  run: |
      #        echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV
      #        echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install NPM Packages
        run: npm install
        working-directory: cdk
      
      - name: Install AWS CDK
        run: 'sudo npm install -g aws-cdk'

      - name: Install Rust
        id: toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: "wasm32-unknown-unknown"
          components: "rustfmt"

      - name: Install Ziglang
        run: pip3 install ziglang

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-lambda and cargo-leptos
        run: |
          cargo install cargo-lambda
          cargo install --locked cargo-leptos

      - name: Build Leptos Website
        run: cargo leptos build --release 
        working-directory: nexus

      - name: Build Production Server Binary
        run: LEPTOS_OUTPUT_NAME=nexus cargo lambda build --no-default-features --features=ssr --release --output-format zip --arm64
        working-directory: nexus

      - name: CDK Synth
        run: cdk synth
        working-directory: cdk

      - name: CDK Deploy
        run: cdk deploy --require-approval never --context stage=${{ env.STAGE }}
        working-directory: cdk

      - name: Upload assets to S3
        run: aws s3 sync ./nexus/target/site/pkg s3://nexus-static-asset-bucket-${{ env.STAGE}}/pkg --delete